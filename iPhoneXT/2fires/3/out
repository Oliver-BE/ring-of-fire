Starting GP with args: {:max-initial-plushy-size 40, :instructions (slope ISI BUI FWI NT NBD WS WD TB :split integer_+ integer_- integer_* integer_% integer_= exec_dup exec_if boolean_and boolean_or boolean_not boolean_= close 0 1 2 true false), :fire-selection 2, :max-generations 5000, :time-step 3, :parent-selection :lexicase, :tournament-size 5, :step-limit 100, :error-function #object[ring_of_fire.core$fire_error_function 0x2d10e0b1 ring_of_fire.core$fire_error_function@2d10e0b1], :population-size 10}
-------------------------------------------------------
               Report for Generation 0
-------------------------------------------------------
Best plushy: (boolean_and true close WS 0 close integer_- integer_- integer_% boolean_= WS 2 integer_* TB NBD integer_= boolean_not WS true 1 slope :split false slope TB slope NBD integer_= integer_+ integer_% false integer_* boolean_or exec_dup integer_% close slope NT)
Best program: (boolean_and true WS 0 integer_- integer_- integer_% boolean_= WS 2 integer_* TB NBD integer_= boolean_not WS true 1 slope :split false slope TB slope NBD integer_= integer_+ integer_% false integer_* boolean_or exec_dup (integer_%) slope NT)
Best total error: 6330
Total number of cells: 17860
Best percent error: 0.35442328
Fires evaluated:  (g2 k1)

-------------------------------------------------------
               Report for Generation 1
-------------------------------------------------------
Best plushy: (boolean_and true close WS 0 close integer_- integer_- integer_% boolean_= WS 2 integer_* TB NBD integer_= boolean_not WS 1 slope :split slope TB slope NBD integer_= integer_+ false integer_* boolean_or exec_dup integer_% close slope NT)
Best program: (boolean_and true WS 0 integer_- integer_- integer_% boolean_= WS 2 integer_* TB NBD integer_= boolean_not WS 1 slope :split slope TB slope NBD integer_= integer_+ false integer_* boolean_or exec_dup (integer_%) slope NT)
Best total error: 3236
Total number of cells: 12284
Best percent error: 0.26343212
Fires evaluated:  (m2 k2)

